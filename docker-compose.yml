services:
  # Serviço do Backend (Ktor)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - gradle_cache:/root/.gradle/caches
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123
    depends_on:
      neo4j:
        condition: service_healthy
    command: ["tail", "-f", "/dev/null"]

  frontend:
    build:
      context: ./curriculum-graph-gen
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./curriculum-graph-gen:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8080
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_AUTH=none
    depends_on:
      neo4j:
        condition: service_healthy

  # Serviço do Banco de Dados (Neo4j)
  neo4j:
    image: neo4j:4.4
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=none
    volumes:
      - neo4j_data:/data
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell 'RETURN 1' || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10

  db-populator:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - gradle_cache:/root/.gradle/caches
    environment:
      - NEO4J_URI=bolt://neo4j:7687
    depends_on:
      neo4j:
        condition: service_healthy
    working_dir: /app/curriculum-graph-processor
    command: ["./gradlew", "run"]

    profiles:
      - populate

volumes:
  neo4j_data:
  gradle_cache:

