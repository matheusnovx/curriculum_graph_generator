"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LineDot = void 0;
var react_1 = __importDefault(require("react"));
var styles_1 = require("../../styles");
var ChartTooltip_1 = require("./ChartTooltip");
var CustomDot_1 = require("./CustomDot");
function LineDot(props) {
    var cx = props.cx, cy = props.cy, showTooltip = props.showTooltip, stroke = props.stroke, payload = props.payload, value = props.value, xDomain = props.xDomain, seriesName = props.dataKey, dotShape = props.dotShape, tooltipRenderer = props.tooltipRenderer;
    var classes = styles_1.useStyles(createStyles).classes;
    return (react_1.default.createElement(ChartTooltip_1.ChartTooltip, { showTooltip: showTooltip, seriesName: seriesName, label: payload.x, value: Array.isArray(value) ? value[value.length - 1] : value, labelDomain: xDomain, renderer: tooltipRenderer },
        react_1.default.createElement("g", { className: classes.container },
            react_1.default.createElement(CustomDot_1.CustomDot, { cx: cx, cy: cy, stroke: stroke, shape: dotShape }))));
}
exports.LineDot = LineDot;
var createStyles = function () { return ({
    container: {
        '.hover-shape': {
            visibility: 'hidden',
        },
        '&:hover .hover-shape': {
            visibility: 'visible',
        },
    },
}); };
//# sourceMappingURL=LineDot.js.map