"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReferenceAreaTick = void 0;
var react_1 = __importDefault(require("react"));
var recharts_1 = require("recharts");
var lodash_1 = require("lodash");
var styles_1 = require("../../styles");
var string_1 = require("../../util/string");
var MAX_CHARS_PER_LINE = 8;
var TICK_MARGIN = 5;
var TICK_X_DISLOCATION = 15;
var TICK_Y_DISLOCATION = 15;
var TICK_HORIZONTAL_HEIGHT = 2;
var TICK_HORIZONTAL_WIDTH = 8;
var TICK_VERTICAL_WIDTH = 4;
function ReferenceAreaTick(props) {
    var _a, _b, _c, _d, _e;
    var x = props.x, y = props.y, payload = props.payload, refTicks = props.refTicks, height = props.height;
    var theme = styles_1.useTheme();
    var ref = refTicks.get(+payload.value);
    var nameLines = string_1.splitIntoLines(ref.label.name, MAX_CHARS_PER_LINE);
    var _f = getLabelAlignmentParams(nameLines.length, ref), nameYOffset = _f.nameYOffset, descriptionYOffset = _f.descriptionYOffset, dominantBaseline = _f.dominantBaseline;
    var _g = getRectangleDimensions(height, ref), rectangleHeight = _g.rectangleHeight, rectangleWidth = _g.rectangleWidth;
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("text", { x: x, y: y + nameYOffset, dx: TICK_X_DISLOCATION, dy: 0, textAnchor: 'start', dominantBaseline: dominantBaseline, fill: (_c = (_a = ref.label.color) !== null && _a !== void 0 ? _a : (_b = ref.tick) === null || _b === void 0 ? void 0 : _b.color) !== null && _c !== void 0 ? _c : ref.color, style: { fontWeight: 'bold' } }, nameLines.map(function (namePart, i) {
            return namePart && (react_1.default.createElement("tspan", { key: namePart, dx: TICK_X_DISLOCATION, dy: i * TICK_Y_DISLOCATION, x: x, y: y + nameYOffset }, namePart));
        })),
        ref.label.description && (react_1.default.createElement("text", { x: x + TICK_X_DISLOCATION, y: y + TICK_MARGIN + TICK_Y_DISLOCATION + descriptionYOffset, dx: TICK_X_DISLOCATION, dy: 0, textAnchor: 'start', dominantBaseline: dominantBaseline, fill: theme.pallete.text.main }, string_1.splitIntoLines(ref.label.description, MAX_CHARS_PER_LINE).map(function (descriptionPart, i) {
            return descriptionPart && (react_1.default.createElement("tspan", { key: descriptionPart, dx: TICK_X_DISLOCATION, dy: i * TICK_Y_DISLOCATION, x: x, y: y + TICK_MARGIN + TICK_Y_DISLOCATION + descriptionYOffset }, descriptionPart));
        }))),
        react_1.default.createElement(recharts_1.Rectangle, { x: x, y: y, dx: TICK_X_DISLOCATION, dy: TICK_MARGIN / 2, width: rectangleWidth, height: rectangleHeight, fill: (_e = (_d = ref.tick) === null || _d === void 0 ? void 0 : _d.color) !== null && _e !== void 0 ? _e : ref.color })));
}
exports.ReferenceAreaTick = ReferenceAreaTick;
function getLabelAlignmentParams(nameLines, ref) {
    var _a;
    var dominantBaseline = (_a = ref.label.alignment) !== null && _a !== void 0 ? _a : 'text-before-edge';
    var nameExtraLinesHeight = nameLines > 1 ? (nameLines - 1) * TICK_Y_DISLOCATION : 0;
    var nameYOffset = dominantBaseline === 'central' ? -nameExtraLinesHeight / 2 : 0;
    var descriptionYOffset = dominantBaseline === 'central' ? nameExtraLinesHeight / 2 : nameExtraLinesHeight;
    return { nameYOffset: nameYOffset, descriptionYOffset: descriptionYOffset, dominantBaseline: dominantBaseline };
}
function getRectangleDimensions(height, ref) {
    var _a, _b;
    var rectangleDefaultHeight = (lodash_1.last(ref.areaPercents).percent / 100) * height - TICK_MARGIN / 2;
    var rectangleHeight = ((_a = ref.tick) === null || _a === void 0 ? void 0 : _a.kind) === 'horizontal' ? TICK_HORIZONTAL_HEIGHT : rectangleDefaultHeight;
    var rectangleWidth = ((_b = ref.tick) === null || _b === void 0 ? void 0 : _b.kind) === 'horizontal' ? TICK_HORIZONTAL_WIDTH : TICK_VERTICAL_WIDTH;
    return { rectangleHeight: rectangleHeight, rectangleWidth: rectangleWidth };
}
//# sourceMappingURL=ReferenceAreaTick.js.map