"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getChartColorScheme = exports.isDateRange = exports.isValueRange = exports.SeriesType = void 0;
var colors_1 = require("../../styles/colors");
var CHART_COLOR_SCHEMES = {
    blue: Object.values(colors_1.blue).filter(function (_, i) { return i % 2; }),
    orange: Object.values(colors_1.orange).filter(function (_, i) { return i % 2; }),
    pink: Object.values(colors_1.pink).filter(function (_, i) { return i % 2; }),
    gray: Object.values(colors_1.gray).filter(function (_, i) { return i % 2; }),
    default: [colors_1.blue.c40, colors_1.orange.c50, colors_1.blue.c50, colors_1.pink.c40, colors_1.orange.c60, colors_1.blue.c20, colors_1.pink.c50],
};
var SeriesType;
(function (SeriesType) {
    SeriesType[SeriesType["Line"] = 0] = "Line";
    SeriesType[SeriesType["Column"] = 1] = "Column";
    SeriesType[SeriesType["Area"] = 2] = "Area";
})(SeriesType = exports.SeriesType || (exports.SeriesType = {}));
function isValueRange(x) {
    return typeof x.init === 'number';
}
exports.isValueRange = isValueRange;
function isDateRange(x) {
    return Object.prototype.toString.call(x.init) === '[object Date]';
}
exports.isDateRange = isDateRange;
function getChartColorScheme(colorScheme) {
    if (Array.isArray(colorScheme))
        return colorScheme;
    return CHART_COLOR_SCHEMES[colorScheme];
}
exports.getChartColorScheme = getChartColorScheme;
//# sourceMappingURL=model.js.map