"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChartRangeSelector = void 0;
var react_1 = __importStar(require("react"));
var HFlow_1 = require("../../HFlow");
var Text_1 = require("../../Text");
var SelectInline_1 = require("../../SelectInline");
function ChartRangeSelector(props) {
    var label = props.label, options = props.options, defaultOption = props.defaultOption, style = props.style, onChange = props.onChange;
    var optionsArray = Object.entries(options).map(function (_a) {
        var key = _a[0], value = _a[1];
        return ({ label: key, value: value });
    });
    var _a = react_1.useState(defaultOption && defaultOption in options
        ? { label: defaultOption, value: options[defaultOption] }
        : optionsArray.length && optionsArray[0]), value = _a[0], setValue = _a[1];
    var handleOnChange = function (selectedValue) {
        if (selectedValue) {
            setValue(selectedValue);
            onChange && onChange(selectedValue.value);
        }
    };
    return (react_1.default.createElement(HFlow_1.HFlow, { hSpacing: 0, alignItems: 'center', justifyContent: 'flex-end', style: style },
        label && react_1.default.createElement(Text_1.Text, null,
            label,
            ":"),
        react_1.default.createElement(SelectInline_1.SelectInline, { defaultButtonText: label, value: value, itemToString: function (i) { return i === null || i === void 0 ? void 0 : i.label; }, items: optionsArray, onChange: handleOnChange, openOnFocus: true })));
}
exports.ChartRangeSelector = ChartRangeSelector;
//# sourceMappingURL=ChartRangeSelector.js.map