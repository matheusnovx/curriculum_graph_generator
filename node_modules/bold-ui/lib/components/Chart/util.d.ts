import { AxisDomain, DataPoint, ChartSeriesDataPoint } from './model';
import { TickProps } from './Tick';
export declare function getDataPointValue(dp: number | DataPoint<any>): number;
export declare function isInsideDomain(value: any, domain: AxisDomain): boolean;
export declare const getAxisDomainInit: (x: AxisDomain) => number | string;
export declare const getAxisDomainEnd: (x: AxisDomain) => number | string;
export declare const defaultChartDateFormatter: (date: Date) => string;
export declare const getDomainMaxValue: (domain: AxisDomain) => number | Date;
export declare function isOutlier<XDomain>(value: ChartSeriesDataPoint<XDomain>, max?: number | Date, min?: number | Date): boolean;
export declare const getOutlierStep: (tickStep: number) => number;
export declare const getOutlierStepFromDomain: (domain: AxisDomain) => number;
export declare const getOutlierSeriesName: (seriesName: string) => string;
export declare const convertTickProps: (props: any) => Omit<TickProps, 'isOutlierIndicator' | 'domainMaxValue' | 'isAxisX'>;
