"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertTickProps = exports.getOutlierSeriesName = exports.getOutlierStepFromDomain = exports.getOutlierStep = exports.isOutlier = exports.getDomainMaxValue = exports.defaultChartDateFormatter = exports.getAxisDomainEnd = exports.getAxisDomainInit = exports.isInsideDomain = exports.getDataPointValue = void 0;
var model_1 = require("./model");
function getDataPointValue(dp) {
    if (typeof dp === 'number')
        return dp;
    else
        return dp.y;
}
exports.getDataPointValue = getDataPointValue;
function isInsideDomain(value, domain) {
    if (Array.isArray(domain))
        return domain.includes(value);
    else
        return +value >= +domain.init && +value <= +domain.end;
}
exports.isInsideDomain = isInsideDomain;
exports.getAxisDomainInit = function (x) {
    return model_1.isValueRange(x) || model_1.isDateRange(x) ? +x.init : x.length && x[0];
};
exports.getAxisDomainEnd = function (x) {
    return model_1.isValueRange(x) || model_1.isDateRange(x) ? +x.end : x.length && x[x.length - 1];
};
exports.defaultChartDateFormatter = function (date) { return date.toLocaleDateString(); };
var getDomainNumericStep = function (domain) { var _a; return !domain || Array.isArray(domain) ? null : model_1.isValueRange(domain) ? domain.step : (_a = domain.step) === null || _a === void 0 ? void 0 : _a.amount; };
exports.getDomainMaxValue = function (domain) {
    return !domain || Array.isArray(domain) ? null : domain.end;
};
function isOutlier(value, max, min) {
    return max && getDataPointValue(value) > +max && (!min || getDataPointValue(value) < +min);
}
exports.isOutlier = isOutlier;
exports.getOutlierStep = function (tickStep) { return (tickStep < 15 ? tickStep : Math.floor(tickStep / 3)); };
exports.getOutlierStepFromDomain = function (domain) { return exports.getOutlierStep(getDomainNumericStep(domain)); };
exports.getOutlierSeriesName = function (seriesName) { return "outliers" + seriesName; };
exports.convertTickProps = function (props) { return ({
    fill: props.fill,
    height: props.height,
    payload: props.payload,
    stroke: props.stroke,
    textAnchor: props.textAnchor,
    width: props.width,
    x: props.x,
    y: props.y,
}); };
//# sourceMappingURL=util.js.map