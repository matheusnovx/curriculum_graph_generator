import React from 'react';
import { PopperProps } from 'react-popper';
import { Theme } from '../../styles';
import { UseFormControlProps } from '../../hooks/useFormControl';
import { TextInputProps } from '../TextField';
import { ComboboxComponents } from './ComboboxMenuComponents';
import { DefaultComboboxItemType } from './Combobox';
export interface ComboboxSingleselectProps<T> extends Omit<TextInputProps, 'value' | 'onChange' | 'multiple'>, UseFormControlProps {
    value?: T;
    items: T[] | ((query: string) => Promise<T[]>);
    itemToString(item: T): string;
    createNewItem?(inputValue: string): T;
    openOnFocus?: boolean;
    loading: boolean;
    open?: boolean;
    debounceMilliseconds: number;
    menuMinWidth?: number;
    filter?(items: ReadonlyArray<T>, filter: string): T[];
    onChange?: (newValue: T) => void;
    onFilterChange?: (newValue: string) => void;
    components?: Partial<ComboboxComponents<T>>;
    popperProps?: Omit<Partial<PopperProps<any>>, 'children'>;
    inputId?: string;
    labelId?: string;
    menuId?: string;
    toggleButtonId?: string;
    getItemId?(index: number): string;
}
export declare function ComboboxSingleselect<T = DefaultComboboxItemType>(props: ComboboxSingleselectProps<T>): JSX.Element;
export declare const createStyles: (theme: Theme) => {
    menu: React.CSSProperties;
};
