"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createStyles = exports.ComboboxSingleselect = void 0;
var downshift_1 = require("downshift");
var match_sorter_1 = __importDefault(require("match-sorter"));
var react_1 = __importStar(require("react"));
var react_popper_1 = require("react-popper");
var react_2 = require("react");
var lodash_1 = require("lodash");
var i18n_1 = require("../../i18n");
var styles_1 = require("../../styles");
var react_3 = require("../../util/react");
var FormControl_1 = require("../FormControl");
var useFormControl_1 = require("../../hooks/useFormControl");
var TextField_1 = require("../TextField");
var util_1 = require("../../util");
var ComboboxMenuComponents_1 = require("./ComboboxMenuComponents");
var useComboboxItemsLoader_1 = require("./useComboboxItemsLoader");
var ListBox_1 = require("./ListBox");
function ComboboxSingleselect(props) {
    var _a;
    var defaultFilter = react_1.useCallback(function (items, filter) { return match_sorter_1.default(items, filter, { keys: [props.itemToString] }); }, [
        props.itemToString,
    ]);
    var value = props.value, items = props.items, externalLoading = props.loading, debounceMilliseconds = props.debounceMilliseconds, createNewItem = props.createNewItem, components = props.components, itemToString = props.itemToString, menuMinWidth = props.menuMinWidth, _b = props.openOnFocus, openOnFocus = _b === void 0 ? true : _b, onClear = props.onClear, onChange = props.onChange, onFocus = props.onFocus, onBlur = props.onBlur, onClick = props.onClick, onKeyDown = props.onKeyDown, onFilterChange = props.onFilterChange, _c = props.filter, filter = _c === void 0 ? defaultFilter : _c, inputId = props.inputId, labelId = props.labelId, menuId = props.menuId, toggleButtonId = props.toggleButtonId, getItemId = props.getItemId, open = props.open, popperProps = props.popperProps, rest = __rest(props, ["value", "items", "loading", "debounceMilliseconds", "createNewItem", "components", "itemToString", "menuMinWidth", "openOnFocus", "onClear", "onChange", "onFocus", "onBlur", "onClick", "onKeyDown", "onFilterChange", "filter", "inputId", "labelId", "menuId", "toggleButtonId", "getItemId", "open", "popperProps"]);
    var _d = react_1.useState(false), itemsLoaded = _d[0], setItemsLoaded = _d[1];
    var locale = i18n_1.useLocale();
    var classes = styles_1.useStyles(exports.createStyles).classes;
    var isAsync = typeof items === 'function';
    var getItems = react_1.useCallback(function (query) { return (typeof items === 'function' ? items(query) : filter(items !== null && items !== void 0 ? items : util_1.EMPTY_ARRAY, query)); }, [items, filter]);
    var _e = useComboboxItemsLoader_1.useComboboxItemsLoader(getItems, debounceMilliseconds), loadingItems = _e.loading, loadedItems = _e.items, loadItems = _e.loadItems;
    var isLoading = externalLoading || (isAsync && loadingItems);
    // Reload items when changed
    react_1.useEffect(function () { return setItemsLoaded(false); }, [items]);
    var inputRef = react_1.useRef();
    var _f = react_1.useState(), menuRef = _f[0], setMenuRef = _f[1];
    react_1.useEffect(function () {
        var _a;
        if (open && !itemsLoaded) {
            loadItems((_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.value);
            setItemsLoaded(true);
        }
    }, [open, itemsLoaded, loadItems]);
    var _g = downshift_1.useCombobox(__assign({ selectedItem: value, items: loadedItems, stateReducer: comboboxStateReducer(createNewItem), itemToString: itemToString, onInputValueChange: function (_a) {
            var inputValue = _a.inputValue;
            return react_3.composeHandlers(loadItems, onFilterChange)(inputValue);
        }, onSelectedItemChange: function (_a) {
            var selectedItem = _a.selectedItem;
            closeMenu();
            onChange === null || onChange === void 0 ? void 0 : onChange(selectedItem);
        }, onIsOpenChange: function (_a) {
            var isOpen = _a.isOpen, inputValue = _a.inputValue;
            isOpen && !itemsLoaded && loadItems(inputValue);
            setItemsLoaded(true);
        }, inputId: inputId,
        labelId: labelId,
        menuId: menuId,
        toggleButtonId: toggleButtonId,
        getItemId: getItemId }, (lodash_1.isNil(open) ? {} : { isOpen: open }))), isOpen = _g.isOpen, highlightedIndex = _g.highlightedIndex, getLabelProps = _g.getLabelProps, getMenuProps = _g.getMenuProps, getInputProps = _g.getInputProps, getToggleButtonProps = _g.getToggleButtonProps, getItemProps = _g.getItemProps, openMenu = _g.openMenu, closeMenu = _g.closeMenu, reset = _g.reset;
    var _h = useFormControl_1.useFormControl(props), getFormControlProps = _h.getFormControlProps, getFormControlInputProps = _h.getInputProps;
    var _j = getInputProps({
        onFocus: react_3.composeHandlers(onFocus, function () {
            openOnFocus && openMenu();
        }),
        onClick: onClick,
        onBlur: onBlur,
        onKeyDown: onKeyDown,
    }), downshiftInputRef = _j.ref, downshiftInputProps = __rest(_j, ["ref"]);
    var _k = getLabelProps(), internalLabelId = _k.id, downshiftLabelProps = __rest(_k, ["id"]);
    var downshiftMenuProps = getMenuProps();
    var _l = getToggleButtonProps(), toggleButtonRef = _l.ref, downshiftToggleButtonProps = __rest(_l, ["ref"]);
    var _m = react_popper_1.usePopper(inputRef.current, menuRef, __assign({ placement: 'bottom-start' }, popperProps)), popperStyles = _m.styles.popper, popperAttributes = _m.attributes.popper;
    var formControlInputProps = getFormControlInputProps();
    var formControlProps = getFormControlProps();
    var invalid = !!formControlProps.error;
    var componentsInner = react_2.useMemo(function () { return (__assign(__assign({}, ComboboxMenuComponents_1.defaultComboboxComponents), (components !== null && components !== void 0 ? components : {}))); }, [components]);
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(FormControl_1.FormControl, __assign({}, formControlProps, { labelId: internalLabelId }, downshiftLabelProps),
            react_1.default.createElement(TextField_1.TextInput, __assign({ icon: isOpen ? 'angleUp' : 'angleDown', iconAriaLabel: isOpen ? locale.combobox.hideOptions : locale.combobox.showOptions, iconPosition: 'right', inputRef: react_3.composeRefs(inputRef, downshiftInputRef), onClear: react_3.composeHandlers(reset, onClear), invalid: invalid, iconProps: downshiftToggleButtonProps, iconRef: toggleButtonRef }, formControlInputProps, downshiftInputProps, rest))),
        react_1.default.createElement("div", __assign({ "aria-busy": isLoading }, downshiftMenuProps), isOpen && (react_1.default.createElement(ListBox_1.ListBox, __assign({ "data-testid": 'menu', className: classes.menu, style: __assign(__assign({}, popperStyles), { width: (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.clientWidth, minWidth: menuMinWidth }) }, popperAttributes, { ref: setMenuRef, createNewItem: createNewItem, components: componentsInner, getItemProps: getItemProps, highlightedIndex: highlightedIndex, itemToString: itemToString, items: loadedItems, loading: isLoading, tabIndex: -1 }))))));
}
exports.ComboboxSingleselect = ComboboxSingleselect;
var comboboxStateReducer = function (createNewItem) { return function (state, actionAndChanges) {
    var type = actionAndChanges.type, changes = actionAndChanges.changes;
    switch (type) {
        case downshift_1.useCombobox.stateChangeTypes.InputChange:
            return __assign(__assign({}, changes), { selectedItem: undefined });
        case downshift_1.useCombobox.stateChangeTypes.InputBlur:
            return __assign(__assign({}, changes), (!changes.selectedItem &&
                (createNewItem
                    ? { selectedItem: createNewItem(state.inputValue) }
                    : {
                        inputValue: '',
                    })));
        case downshift_1.useCombobox.stateChangeTypes.InputClick:
            return __assign(__assign({}, changes), { isOpen: state.isOpen });
        default:
            return changes;
    }
}; };
exports.createStyles = function (theme) { return ({
    menu: {
        display: 'flex',
        flexDirection: 'column',
        zIndex: theme.zIndex.dropdown,
        border: "1px solid " + theme.pallete.divider,
        borderRadius: theme.radius.popper,
        backgroundColor: theme.pallete.surface.main,
        boxShadow: theme.shadows.outer['40'],
        maxHeight: '20rem',
    },
}); };
//# sourceMappingURL=ComboboxSingleselect.js.map