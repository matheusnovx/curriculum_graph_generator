import React, { HTMLAttributes, MouseEvent, Ref } from 'react';
import { UseSelectPropGetters } from 'downshift';
import { Theme } from '../../styles';
import { ComboboxComponents } from './ComboboxMenuComponents';
interface ListBoxProps<T> extends HTMLAttributes<HTMLDivElement> {
    components: ComboboxComponents<T>;
    items: T[];
    loading: boolean;
    highlightedIndex: number;
    itemToString(item: T): string;
    createNewItem?(inputValue: string): T;
    getItemProps(options: {
        index: number;
        item: T;
    }): ReturnType<UseSelectPropGetters<T>['getItemProps']>;
    isItemSelected?(item: T): boolean;
    onItemClick?(item: T, ev: MouseEvent<HTMLLIElement>): void;
}
export declare const ListBox: <T>(props: ListBoxProps<T> & {
    ref?: Ref<HTMLDivElement>;
}) => ReturnType<typeof ListBoxInner>;
declare function ListBoxInner<T>(props: ListBoxProps<T>, ref: Ref<HTMLDivElement>): JSX.Element;
export declare const createStyles: (theme: Theme) => {
    list: React.CSSProperties;
};
export {};
