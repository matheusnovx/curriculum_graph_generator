"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Aggregators = void 0;
/** @jsx jsx */
var core_1 = require("@emotion/core");
var Radio_1 = require("../../Radio");
var Select_1 = require("../../Select");
var VFlow_1 = require("../../VFlow");
var i18n_1 = require("../../../i18n");
var utils_1 = require("./utils");
function Aggregators(props) {
    var locale = i18n_1.useLocale();
    var numberKeys = props.numberKeys, keyMapping = props.keyMapping, handleAggregatorKeyChange = props.handleAggregatorKeyChange, handleAggregatorChange = props.handleAggregatorChange, aggregator = props.aggregator, aggregatorKey = props.aggregatorKey;
    var styles = createStyles();
    var itemToString = function (item) { return (item ? keyMapping.get(item).keyName || item : ''); };
    var handleKeySelect = function (item) {
        handleAggregatorKeyChange(item);
    };
    var aggregators = utils_1.getAggregators(locale.aggregators);
    var keyNotDependentAggregators = utils_1.getKeyNotDependentAggregators(aggregators);
    var handleAggregatorSelect = function (evt) {
        var idx = Number(evt.target.value);
        handleAggregatorChange(aggregators[idx]);
    };
    var numberKeysIsEmpty = numberKeys.length === 0;
    return (core_1.jsx(VFlow_1.VFlow, null,
        core_1.jsx("div", { css: styles.container }, (numberKeysIsEmpty ? keyNotDependentAggregators : aggregators).map(function (f, idx) { return (core_1.jsx("div", { key: f.id, css: styles.wrapper },
            core_1.jsx(Radio_1.Radio, { name: 'aggregator', checked: aggregator.id === f.id, disabled: f.keyDependent && numberKeysIsEmpty, label: f.label, value: idx, onChange: handleAggregatorSelect }))); })),
        aggregator.keyDependent && (core_1.jsx(Select_1.Select, { disabled: numberKeysIsEmpty, items: numberKeys, itemToString: itemToString, value: aggregatorKey, onChange: handleKeySelect }))));
}
exports.Aggregators = Aggregators;
var createStyles = function () { return ({
    container: core_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  "], ["\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  "]))),
    wrapper: core_1.css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    padding-top: 1rem;\n    padding-left: 1rem;\n    margin-bottom: 0.5rem;\n    margin-right: 1rem;\n  "], ["\n    padding-top: 1rem;\n    padding-left: 1rem;\n    margin-bottom: 0.5rem;\n    margin-right: 1rem;\n  "]))),
}); };
var templateObject_1, templateObject_2;
//# sourceMappingURL=Aggregators.js.map