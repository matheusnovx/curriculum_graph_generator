"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Default = void 0;
var react_1 = __importStar(require("react"));
var addon_knobs_1 = require("@storybook/addon-knobs");
var addon_actions_1 = require("@storybook/addon-actions");
var i18n_1 = require("../../../i18n");
var Aggregators_1 = require("./Aggregators");
var utils_1 = require("./utils");
exports.default = {
    title: 'Components/PivotTable/Aggregators',
};
var keyMapping = new Map([
    ['name', { keyName: 'Name' }],
    ['size', { keyName: 'Size' }],
]);
var numberKeyOptions = {
    Empty: [],
    Name: ['name'],
    'Name and Size': ['name', 'size'],
};
exports.Default = function () {
    var locale = i18n_1.useLocale();
    var initialAggregator = utils_1.getCountAggregator(locale.aggregators);
    var _a = react_1.useState(initialAggregator), aggregator = _a[0], setAggregator = _a[1];
    var _b = react_1.useState(), aggregatorKey = _b[0], setAggregatorKey = _b[1];
    var handleAggregatorChange = function (aggregator) {
        addon_actions_1.action('Aggregator changed')(aggregator);
        setAggregator(function () { return aggregator; });
    };
    var handleAggregatorKeyChange = function (key) {
        addon_actions_1.action('Aggregator key changed')(key);
        setAggregatorKey(key);
    };
    var numberKeys = addon_knobs_1.optionsKnob('Number Keys', numberKeyOptions, [], { display: 'select' });
    return (react_1.default.createElement(Aggregators_1.Aggregators, { numberKeys: numberKeys, keyMapping: keyMapping, handleAggregatorChange: handleAggregatorChange, handleAggregatorKeyChange: handleAggregatorKeyChange, aggregator: aggregator, aggregatorKey: aggregatorKey }));
};
//# sourceMappingURL=Aggregators.stories.js.map