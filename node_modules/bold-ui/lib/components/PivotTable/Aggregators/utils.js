"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getKeyNotDependentAggregators = exports.getAggregators = exports.getCountAggregator = void 0;
var model_1 = require("./model");
exports.getCountAggregator = function (aggregatorLabels) { return ({
    id: model_1.AggregatorEnum.COUNT,
    label: aggregatorLabels.count,
    value: undefined,
    keyDependent: false,
}); };
var getPercentageAggregator = function (aggregatorLabels) { return ({
    id: model_1.AggregatorEnum.PERCENTAGE,
    label: aggregatorLabels.percentage,
    value: function (values, total) { return (values.reduce(function (prev, curr) { return prev + curr; }, 0) * 100) / total; },
    keyDependent: false,
    chain: [exports.getCountAggregator(aggregatorLabels)],
    suffix: '%',
}); };
var getAverageAggregator = function (aggregatorLabels) { return ({
    id: model_1.AggregatorEnum.AVERAGE,
    label: aggregatorLabels.average,
    value: function (values) { return values.reduce(function (prev, curr) { return prev + curr; }, 0) / values.length; },
    keyDependent: true,
}); };
var getMaximumAggregator = function (aggregatorLabels) { return ({
    id: model_1.AggregatorEnum.MAXIMUM,
    label: aggregatorLabels.maximum,
    value: function (values) { return values.reduce(function (prev, curr) { return (prev > curr ? prev : curr); }); },
    keyDependent: true,
}); };
var getMinimumAggregator = function (aggregatorLabels) { return ({
    id: model_1.AggregatorEnum.MINIMUM,
    label: aggregatorLabels.minimum,
    value: function (values) { return values.reduce(function (prev, curr) { return (prev < curr ? prev : curr); }); },
    keyDependent: true,
}); };
exports.getAggregators = function (aggregatorLabels) {
    return [
        exports.getCountAggregator(aggregatorLabels),
        getPercentageAggregator(aggregatorLabels),
        getAverageAggregator(aggregatorLabels),
        getMaximumAggregator(aggregatorLabels),
        getMinimumAggregator(aggregatorLabels),
    ];
};
exports.getKeyNotDependentAggregators = function (aggregators) {
    return aggregators.filter(function (agg) { return !agg.keyDependent; });
};
//# sourceMappingURL=utils.js.map