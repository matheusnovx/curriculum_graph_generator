"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PivotTableCell = void 0;
var react_1 = __importStar(require("react"));
var styles_1 = require("../../../styles");
var util_1 = require("../../../util");
var number_1 = require("../../../util/number");
var utils_1 = require("./utils");
var styles_2 = require("./styles");
var PivotTableProvider_1 = require("./PivotTableProvider");
var model_1 = require("./model");
function PivotTableCell(props) {
    var types = props.types, gridArea = props.gridArea, children = props.children, _a = props.isEndColumn, isEndColumn = _a === void 0 ? false : _a, _b = props.isEndRow, isEndRow = _b === void 0 ? false : _b, styles = props.styles;
    var isHeader = types.has(model_1.PivotTableCellType.HEADER);
    var isValue = types.has(model_1.PivotTableCellType.VALUE);
    var isValueOrEmpty = isValue || types.has(model_1.PivotTableCellType.EMPTY);
    var rowStart = gridArea.rowStart, rowEnd = gridArea.rowEnd, columnStart = gridArea.columnStart, columnEnd = gridArea.columnEnd;
    var key = gridArea.toString();
    var context = react_1.useContext(PivotTableProvider_1.PivotTableContext);
    var _c = styles_1.useStyles(styles_2.pivotTableCellCreateStyles, key, context.maxValue, props), _d = _c.classes, root = _d.root, endColumnBorder = _d.endColumnBorder, endRowBorder = _d.endRowBorder, css = _c.css, theme = _c.theme;
    var relatedPivotTableCells = react_1.useRef();
    react_1.useEffect(function () {
        relatedPivotTableCells.current = utils_1.selectPivotTableCellElements(rowStart, columnStart);
    }, [rowStart, columnStart]);
    var handleMouseEnter = function () {
        if (isValueOrEmpty) {
            relatedPivotTableCells.current.forEach(function (element) {
                var backgroundColor = window.getComputedStyle(element).getPropertyValue('background-color');
                if (backgroundColor === styles_1.hexToRGB(theme.pallete.primary.c100)) {
                    backgroundColor = styles_1.hexToRGB(theme.pallete.gray.c90);
                }
                backgroundColor = backgroundColor.replace('rgb', 'rgba').replace(')', ', 0.5)');
                element.setAttribute('style', "background-color: " + backgroundColor);
            });
        }
    };
    var handleMouseLeave = function () {
        if (isValueOrEmpty) {
            relatedPivotTableCells.current.forEach(function (element) { return element.removeAttribute('style'); });
        }
    };
    var rowNumbers = react_1.useMemo(function () { return util_1.range(rowStart, rowEnd).join(' '); }, [rowStart, rowEnd]);
    var columnNumbers = react_1.useMemo(function () { return util_1.range(columnStart, columnEnd).join(' '); }, [columnStart, columnEnd]);
    var className = css(root, isEndColumn && endColumnBorder, isEndRow && endRowBorder, styles);
    return (react_1.default.createElement("div", { key: key, onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave, "data-rownumber": rowNumbers, "data-columnnumber": columnNumbers, className: className },
        !isHeader && typeof children === 'number' ? number_1.formatDecimalOrInteger(children) : children,
        isValue ? context.suffix : null));
}
exports.PivotTableCell = PivotTableCell;
//# sourceMappingURL=PivotTableCell.js.map